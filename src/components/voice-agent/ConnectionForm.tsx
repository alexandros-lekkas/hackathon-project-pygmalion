"use client";

import { useState } from "react";
import { LiveKitConfig } from "@/hooks/useLiveKit";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

interface ConnectionFormProps {
  onConnect: (config: LiveKitConfig) => void;
  isConnecting: boolean;
}

export default function ConnectionForm({
  onConnect,
  isConnecting,
}: ConnectionFormProps) {
  const [formData, setFormData] = useState({
    roomName: "voice-agent-room",
    participantName: "User",
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();

    // In a real app, you'd get the token from your backend
    // For now, we'll use a placeholder that needs to be replaced
    const config: LiveKitConfig = {
      url: process.env.NEXT_PUBLIC_LIVEKIT_URL || "",
      token: "PLACEHOLDER_TOKEN", // This needs to be generated by your backend
      roomName: formData.roomName,
    };

    onConnect(config);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  return (
    <Card className="w-full max-w-md">
      <CardHeader>
        <CardTitle className="text-2xl text-center">
          Connect to Voice Agent
        </CardTitle>
        <CardDescription className="text-center">
          Enter your details to start talking with the AI
        </CardDescription>
      </CardHeader>

      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div className="space-y-2">
            <Label htmlFor="roomName">Room Name</Label>
            <Input
              id="roomName"
              name="roomName"
              value={formData.roomName}
              onChange={handleInputChange}
              placeholder="Enter room name"
              required
            />
          </div>

          <div className="space-y-2">
            <Label htmlFor="participantName">Your Name</Label>
            <Input
              id="participantName"
              name="participantName"
              value={formData.participantName}
              onChange={handleInputChange}
              placeholder="Enter your name"
              required
            />
          </div>

          <Button
            type="submit"
            disabled={isConnecting}
            className="w-full"
            size="lg"
          >
            {isConnecting ? "Connecting..." : "Connect"}
          </Button>
        </form>

        <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md">
          <p className="text-sm text-yellow-800">
            <strong>Note:</strong> You need to set up your LiveKit URL in the
            environment variables and implement token generation in your
            backend.
          </p>
        </div>
      </CardContent>
    </Card>
  );
}
