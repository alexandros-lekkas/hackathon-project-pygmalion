'use client';

import { useState } from 'react';
import { LiveKitConfig } from '@/src/hooks/useLiveKit';

interface ConnectionFormProps {
  onConnect: (config: LiveKitConfig) => void;
  isConnecting: boolean;
}

export default function ConnectionForm({ onConnect, isConnecting }: ConnectionFormProps) {
  const [formData, setFormData] = useState({
    roomName: 'voice-agent-room',
    participantName: 'User',
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // In a real app, you'd get the token from your backend
    // For now, we'll use a placeholder that needs to be replaced
    const config: LiveKitConfig = {
      url: process.env.NEXT_PUBLIC_LIVEKIT_URL || '',
      token: 'PLACEHOLDER_TOKEN', // This needs to be generated by your backend
      roomName: formData.roomName,
    };

    onConnect(config);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value,
    }));
  };

  return (
    <div className="bg-white rounded-lg shadow-lg p-6 max-w-md w-full">
      <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">
        Connect to Voice Agent
      </h2>

      <form onSubmit={handleSubmit} className="space-y-4">
        <div>
          <label htmlFor="roomName" className="block text-sm font-medium text-gray-700 mb-2">
            Room Name
          </label>
          <input
            type="text"
            id="roomName"
            name="roomName"
            value={formData.roomName}
            onChange={handleInputChange}
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Enter room name"
            required
          />
        </div>

        <div>
          <label htmlFor="participantName" className="block text-sm font-medium text-gray-700 mb-2">
            Your Name
          </label>
          <input
            type="text"
            id="participantName"
            name="participantName"
            value={formData.participantName}
            onChange={handleInputChange}
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Enter your name"
            required
          />
        </div>

        <button
          type="submit"
          disabled={isConnecting}
          className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-semibold py-3 px-4 rounded-md transition-colors duration-200"
        >
          {isConnecting ? 'Connecting...' : 'Connect'}
        </button>
      </form>

      <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md">
        <p className="text-sm text-yellow-800">
          <strong>Note:</strong> You need to set up your LiveKit URL in the environment variables and implement token generation in your backend.
        </p>
      </div>
    </div>
  );
}
